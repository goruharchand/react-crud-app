{"version":3,"sources":["Components/header/header.js","Components/footer/footer.js","Components/User/AddUser/addUser.js","Components/shared/Modal.js","Components/shared/ConfirmationModal.js","Components/User/userListing/userListing.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Container","fluid","Row","Col","className","Footer","AddUser","label","currentUser","addUser","handleClose","initialFormState","id","firstName","lastName","email","mobile","password","useState","user","setUser","handleInputChange","event","target","name","value","useEffect","Form","onSubmit","preventDefault","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","ModalBox","show","Modal","onHide","animation","closeButton","Title","Body","ConfirmationModal","closeConfirmModal","deleteUser","onClick","UserListing","userList","setUserList","setLabel","setShow","confirmModal","setConfirmModal","setCurrentUser","handleShow","Table","striped","bordered","hover","colSpan","length","map","handleDelete","forEach","userVal","index","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cdea247.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col className='header'>CRUD App</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col className='footer'></Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst AddUser = ({label, currentUser, addUser, handleClose}) => {\r\n\r\n    const initialFormState = { id: null, firstName: '', lastName: '', email: '', mobile:'', password:'' };\r\n\tconst [ user, setUser ] = useState(initialFormState);\r\n\r\n    const handleInputChange = event => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tsetUser({ ...user, [name]: value })\r\n\t}\r\n\r\n    const handleUserSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!user.firstName || !user.lastName || !user.email || !user.mobile || !user.password) return;\r\n        addUser(user, label);\r\n        setUser(initialFormState);\r\n        handleClose();\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          setUser(currentUser)\r\n        },\r\n        [currentUser]\r\n    )\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleUserSubmit}>\r\n        <Form.Group controlId=\"formBasicFname\">\r\n          <Form.Label>FirstName</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter FirstName\" name='firstName' value={user.firstName} onChange={handleInputChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicLname\">\r\n          <Form.Label>LastName</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter LastName\" name='lastName' value={user.lastName} onChange={handleInputChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" name='email' value={user.email} onChange={handleInputChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicMobile\">\r\n          <Form.Label>Email Mobile</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Enter Mobile\" name='mobile' value={user.mobile} onChange={handleInputChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" name='password' value={user.password} onChange={handleInputChange}/>\r\n        </Form.Group>\r\n        {label === 'ADD_USER' ? (\r\n            <Button variant=\"primary\" type=\"submit\">Add New User</Button>\r\n        ) : (\r\n            <Button variant=\"primary\" type=\"submit\">Update User</Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddUser;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal } from 'react-bootstrap';\r\nimport AddUser from '../User/AddUser/addUser';\r\n\r\nconst ModalBox = ({show, label, currentUser, handleClose, addUser}) => {\r\n  return (\r\n    <>\r\n     <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n              {label === 'ADD_USER' ? 'Add New User' : 'Edit User'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <AddUser label={label} currentUser={currentUser} addUser={addUser} handleClose={handleClose}/>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ModalBox;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nconst ConfirmationModal = ({show, closeConfirmModal, deleteUser}) => {\r\n  return (\r\n    <>\r\n     <Modal show={show} onHide={closeConfirmModal} animation={false}>\r\n        <Modal.Body>\r\n          <h3>Are you sure, you want to delete this user?</h3>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeConfirmModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={deleteUser}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModal;","import React, {useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './userListing.css';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport ModalBox from '../../shared/Modal';\r\nimport ConfirmationModal from '../../shared/ConfirmationModal';\r\n\r\nconst UserListing = () => {\r\n\r\n    const usersData = [\r\n\t\t{ id: 1, firstName: 'John', lastName: 'Doe', email: 'joe@gmail.com', mobile: 9799445860, password: '123456'},\r\n\t\t{ id: 2, firstName: 'Ross', lastName: 'Taylor', email: 'ross@gmail.com', mobile: 9799445861, password: '123456'},\r\n\t\t{ id: 3, firstName: 'Ben', lastName: 'sphere', email: 'ben@gmail.com', mobile: 9799445862, password: '123456' },\r\n\t];\r\n\r\n    const initialFormState = { id: null, firstName: '', lastName: '', email: '', mobile:'', password:'' };\r\n\r\n    const [ userList, setUserList ] = useState(usersData);\r\n    const [ label, setLabel ] = useState('ADD_USER');\r\n    const [show, setShow] = useState(false);\r\n    const [confirmModal, setConfirmModal] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState(initialFormState);\r\n    const handleClose = () => setShow(false);\r\n    const closeConfirmModal = () => setConfirmModal(false);\r\n\r\n    const handleShow = (event, user) => {\r\n        setShow(true);\r\n        setLabel(event);\r\n        event === 'EDIT_USER' ? setCurrentUser(user) : setCurrentUser(initialFormState); \r\n    };\r\n\r\n    const addUser = (user, label) => {\r\n        if (label === 'ADD_USER') {\r\n            user.id = userList.length + 1\r\n\t\t    setUserList([ ...userList, user ]);\r\n        } else if (label === 'EDIT_USER') {\r\n            userList.forEach((userVal, index) => {\r\n                if (userVal.id === user.id) {\r\n                    userList[index] = user;\r\n                    setUserList([...userList]);\r\n                } else {\r\n                    setUserList([...userList]);\r\n                }\r\n            });\r\n        }\r\n\t}\r\n\r\n    const handleDelete = (user) => {\r\n        setConfirmModal(true);\r\n        setCurrentUser(user);\r\n    }\r\n\r\n    const deleteUser = () => {\r\n        setConfirmModal(false);\r\n        setUserList(userList.filter(userVal => (userVal.id !== currentUser.id)))\r\n    }\r\n\r\n    return (\r\n        <div className='table-container'>\r\n            <div className='main-table'>\r\n                <Button variant=\"primary\" onClick={() =>handleShow('ADD_USER', {})}>Add New User</Button>{' '}\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                            <th>Mobile</th>\r\n                            <th>Password</th>\r\n                            <th colSpan=\"2\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {userList.length > 0 ? (\r\n                            userList.map(user => (\r\n                                <tr key={user.id}>\r\n                                    <td>{user.id}</td>\r\n                                    <td>{user.firstName}</td>\r\n                                    <td>{user.lastName}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.mobile}</td>\r\n                                    <td>{user.password}</td>\r\n                                    <td className='edit-btn' onClick={() =>handleShow('EDIT_USER', user)}>Edit</td>\r\n                                    <td className='edit-btn' onClick={() =>handleDelete(user)}>Delete</td>\r\n                                </tr>\r\n                            ))\r\n                        ):(\r\n                            <tr>\r\n                            <td colSpan={3}>No userList</td>\r\n                          </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <ModalBox show={show} label={label} currentUser={currentUser} handleClose={handleClose} addUser={addUser}/>\r\n            <ConfirmationModal show={confirmModal} closeConfirmModal={closeConfirmModal}\r\n            deleteUser={deleteUser}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListing;","import './App.css';\nimport Header from './Components/header/header';\nimport Footer from './Components/footer/footer';\nimport UserListing from './Components/User/userListing/userListing';\n\n\nfunction App() {\n  return (\n    <>\n      <Header /> \n      <UserListing />\n      <Footer /> \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}